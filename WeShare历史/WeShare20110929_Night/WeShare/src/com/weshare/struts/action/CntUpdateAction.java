/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.weshare.struts.action;

import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;
import org.apache.struts.actions.DispatchAction;

import com.weshare.jdbc.dbconn.DBManager;
import com.weshare.struts.form.CntUpdateForm;

/** 
 * MyEclipse Struts
 * Creation date: 09-16-2011
 * 
 * XDoclet definition:
 * @struts.action path="/cntUpdate" name="cntUpdateForm" input="/formValidate/cntUpdate.jsp" parameter="method" scope="request" validate="true"
 * @struts.action-forward name="success" path="/actionResult.jsp"
 */
public class CntUpdateAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * 增加指定活动的指定数据
	 */
	public ActionForward add(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CntUpdateForm cuf = (CntUpdateForm) form;
		ActionForward af = new ActionForward();
		ActionMessages err = new ActionMessages();
		af = mapping.findForward("fail");
		
		String sql = "";
		String cntType = "";
		String tbl = "";
		DBManager db = new DBManager();
		int cnt = 0;
		switch(cuf.getType()){
		case 0:						//参与人数
			cntType = "joinCount";
			tbl = "[Join]";
			break;
		case 1:						//围观人数
			cntType = "viewCount";
			tbl = "[View]";
			break;
		case 2:						//评论人数
			cntType = "commentCount";
			tbl = "ShareComment";
			break;
		default:
			break;
		}

		//先往tbl表中追加记录
		sql += "insert into ";
		sql += tbl;
		sql += " (ShareID,UserID)values(";
		sql += cuf.getShareId();
		sql += ",";
		sql += (Integer)(request.getSession().getAttribute("curUserId"));
		sql += ")";
		
		cnt = db.doInsert(sql);
		if(cnt > 0){				//插入成功
			//更新Share表中的Count，以后将此处理放到触发器中设置
			sql = "update Share set ";
			sql += cntType;
			sql += "=";
			sql += cntType;
			sql += "+1";
			sql += " where ShareID=";
			sql += cuf.getShareId();
			cnt = 0;
			cnt = db.doUpdate(sql);
			
			if(cnt > 0){			//更新成功
				af = get(mapping,cuf,request,response);				//获取最新数据
			}else{					//更新失败
				del(mapping,cuf,request,response);					//删除已更新的数据
				err.add("result",new ActionMessage("err.action.commonFail"));
			}
		}else{						//插入失败
			err.add("result",new ActionMessage("err.action.commonFail"));
		}
		return af;
	}
	
	/**
	 * 删除指定活动的指定数据，一般是减1操作
	 */
	public ActionForward del(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CntUpdateForm cuf = (CntUpdateForm) form;
		ActionForward af = new ActionForward();
		ActionMessages err = new ActionMessages();
		af = mapping.findForward("fail");
		
		String sql = "";
		String cntType = "";
		String tbl = "";
		DBManager db = new DBManager();
		int cnt = 0;
		switch(cuf.getType()){
		case 0:						//参与人数
			cntType = "joinCount";
			tbl = "[Join]";
			break;
		case 1:						//围观人数
			cntType = "viewCount";
			tbl = "[View]";
			break;
		case 2:						//评论人数
			cntType = "commentCount";
			tbl = "ShareComment";
			break;
		default:
			break;
		}

		//先从tbl表中删除记录
		sql += "delete from ";
		sql += tbl;
		sql += " where ShareID=";
		sql += cuf.getShareId();
		sql += " and UserID=";
		sql += (Integer)(request.getSession().getAttribute("curUserId"));
		
		cnt = db.doDelete(sql);
		if(cnt > 0){				//删除成功
			//更新Share表中的Count，以后将此处理放到触发器中设置
			sql = "update Share set ";
			sql += cntType;
			sql += "=";
			sql += cntType;
			sql += "-1";
			sql += " where ShareID=";
			sql += cuf.getShareId();
			cnt = 0;
			cnt = db.doUpdate(sql);
			
			if(cnt > 0){			//更新成功
				af = get(mapping,cuf,request,response);				//获取最新数据
			}else{					//更新失败
				err.add("result",new ActionMessage("err.action.commonFail"));
			}
		}else{						// 删除失败
			err.add("result",new ActionMessage("err.action.commonDel"));
		}
		return af;
	}
	
	/**
	 * 获取指定活动的指定类型的数据
	 */
	public ActionForward get(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		CntUpdateForm cuf = (CntUpdateForm) form;
		ActionForward af = new ActionForward();
		ActionMessages err = new ActionMessages();
		af = mapping.findForward("fail");
		
		String sql = "";
		String cntType = "";
		sql += "select ";
		switch(cuf.getType()){
		case 0:						//参与人数
			cntType = "joinCount";
			break;
		case 1:						//围观人数
			cntType = "viewCount";
			break;
		case 2:						//评论人数
			cntType = "commentCount";
			break;
		default:
			break;
		}
		sql += cntType;
		sql += " from Share where ShareID=";
		sql += cuf.getShareId();
		
		DBManager dbMgr = new DBManager();
		ResultSet rs;
		rs = dbMgr.doQuery(sql);
		try {
			if(rs.next()){
				request.setAttribute("cnt", rs.getInt(cntType));
				af = mapping.findForward("cntPage");
			}else{						//活动被删除
				err.add("result",new ActionMessage("err.action.commonDel"));
			}
			rs.close();
		} catch (SQLException e) {
			err.add("result",new ActionMessage("err.action.commonFail"));
		}		
		rs = null;
		saveErrors(request, err);
		return af;
	}
}