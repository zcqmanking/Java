/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.weshare.struts.action;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;
import org.apache.struts.action.ActionMessages;

import com.weshare.jdbc.dbconn.DBManager;
import com.weshare.struts.form.LoginForm;
import com.weshare.util.Config;

/**
 * MyEclipse Struts Creation date: 06-04-2011
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/login" name="loginForm" input="/login.jsp"
 *                scope="request" validate="true"
 * @struts.action-forward name="fail" path="/login.jsp"
 * @struts.action-forward name="suucess" path="/myPage.jsp"
 */
public class LoginAction extends Action {
	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		LoginForm loginForm = (LoginForm) form;
		ActionForward af = new ActionForward();
		ActionMessages err = new ActionMessages();
		
		// 查询是否存在该用户
		String sql = "select UserID,UserName,PageSize,NewsStyle,Photo from Users where LoginName='"
				+ loginForm.getUsername() + "' and Password = '"
				+ loginForm.getPassword() + "'";
		DBManager dbMgr = new DBManager();
		ResultSet rs = dbMgr.doQuery(sql);

		try {
			if (rs == null || !rs.next()) {
				err.add("usernameErr", new ActionMessage("err.login.UNPWErr"));
				af = mapping.findForward("fail");
			} else {
				// 保存Cookie
				try {
					Cookie ckUsername;
					ckUsername = new Cookie("username", URLEncoder.encode(rs.getString("UserName"),"UTF-8"));
					Cookie ckPassword = new Cookie("password", loginForm.getPassword());
					ckUsername.setMaxAge(30 * 24 * 60 * 60);// 30天
					ckPassword.setMaxAge(30 * 24 * 60 * 60);// 30天
					response.addCookie(ckUsername);
					response.addCookie(ckPassword);
				} catch (UnsupportedEncodingException e) {
					
				}

				HttpSession session = request.getSession();
				session.setAttribute("curUserName", rs.getString("UserName"));
				session.setAttribute("curPassWord", loginForm.getPassword());
				
				int ps = (rs.getInt("PageSize") > 0) ? rs.getInt("PageSize") : Config.PAGE_SIZE;
				
				session.setAttribute("pageSize", ps);
				session.setAttribute("newsStyle", rs.getInt("NewsStyle"));
				session.setAttribute("curUserId", rs.getInt("UserID"));
				session.setAttribute("curUserIcon", rs.getString("Photo"));
				rs.close();
				rs = null;
				af = mapping.findForward("success");
			}
		} catch (SQLException e1) {
			err.add("commonErr", new ActionMessage("err.db.getUserInfoErr"));
			// 转向一个通用的错误处理页面
			af = mapping.findForward("failPage");
		}

		saveErrors(request, err);
		dbMgr.close();
		return af;
	}
}