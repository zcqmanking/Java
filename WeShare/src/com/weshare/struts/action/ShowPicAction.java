/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.weshare.struts.action;

import java.io.IOException;
import java.io.PrintWriter;
import java.net.URLEncoder;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.weshare.beans.Share;
import com.weshare.beans.SharePhoto;
import com.weshare.beans.SharePhotoComment;
import com.weshare.beans.Users;
import com.weshare.jdbc.dbconn.DBManager;
import com.weshare.struts.form.ShowPicForm;

/**
 * MyEclipse Struts Creation date: 10-11-2011
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/showPic" name="showPicForm" input="/logPicList.do"
 *                scope="request" validate="true"
 * @struts.action-forward name="success" path="/picDetail.jsp"
 */
public class ShowPicAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/**
	 * 加载当前图片
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward cur(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ShowPicForm showPicForm = (ShowPicForm) form;// TODO Auto-generated
														// method stub
		Timestamp timeTmp;
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd",
				new Locale("zh", "cn"));
		SimpleDateFormat fullDateFormat = new SimpleDateFormat(
				"yyyy-MM-dd HH:mm:ss", new Locale("zh", "cn"));

		// 读取照片所属人的个人信息，ID、头像、名字
		// 照片所属活动的ID、开始时间、标题、发起人
		// 照片的ID、地址、标题、上传时间
		// 照片的评论，包括评论人ID、头像、评论内容、评论时间
		String sql = "";
		sql += "select picUser.UserID,picUser.Photo,picUser.UserName,"
				+ "Share.ShareID,Share.StartDate,Share.Title as sTitle,"
				+ "SharePhoto.SPID,SharePhoto.Title as spTitle,"
				+ "SharePhoto.UpdateTime,SharePhoto.PhotoURL,SharePhoto.IndexPic,"
				+ "shareUser.UserName shareUserName,shareUser.UserID shareUserID ";
		sql += "from Share right join SharePhoto on (Share.ShareID = SharePhoto.ShareID) ";
		sql += "left join Users picUser on (SharePhoto.UserID = picUser.UserID) ";
		sql += "left join Users shareUser on (Share.UserID = shareUser.UserID)";
		sql += "where SharePhoto.SPID=";
		sql += showPicForm.getId();
		DBManager db = new DBManager();
		ResultSet rs = db.doQuery(sql);

		int owner = 0; // 登录用户是否是当前页面的用户
		SharePhoto sp = new SharePhoto();
		try {
			if (rs.next()) {
				Share s = new Share();
				Users u = new Users();
				u.setPhoto(rs.getString("Photo"));
				u.setUserName(rs.getString("UserName"));
				u.setUserId(rs.getInt("UserID"));

				HttpSession session = request.getSession();
				int curId = (Integer) session.getAttribute("curUserId");
				if (curId == u.getUserId()) {
					owner = 1;
				}

				sp.setUser(u);

				Users shareUser = new Users();
				shareUser.setUserName(rs.getString("shareUserName"));
				shareUser.setUserId(rs.getInt("shareUserID"));
				s.setUsers(shareUser);

				s.setTitle(rs.getString("sTitle"));
				s.setId(rs.getInt("ShareID"));

				timeTmp = rs.getTimestamp("StartDate");
				s.setStartDate(dateFormat.format(timeTmp));

				sp.setShare(s);

				sp.setSpId(rs.getInt("SPID"));
				sp.setTitle(rs.getString("spTitle"));

				timeTmp = rs.getTimestamp("UpdateTime");
				sp.setUpdateTime(fullDateFormat.format(timeTmp));

				sp.setPhotoURL(rs.getString("PhotoURL"));
				
				sp.setIndexPic(rs.getInt("IndexPic"));
			}

			if (sp.getSpId() > 0) {
				sql = "select SharePhotoComment.SPCID,"
						+ "SharePhotoComment.Comment,SharePhotoComment.UpdateTime,"
						+ "Users.UserID,Users.Photo,Users.UserName ";
				sql += "from SharePhotoComment left join Users "
						+ "on(SharePhotoComment.UserID=Users.UserID) ";
				sql += "where SharePhotoComment.SharePhotoID=";
				sql += sp.getSpId();
				sql += " order by SharePhotoComment.UpdateTime asc";

				List<SharePhotoComment> spcList = new ArrayList<SharePhotoComment>();
				rs = db.doQuery(sql);
				while (rs.next()) {
					SharePhotoComment spc = new SharePhotoComment();
					Users u = new Users();
					u.setUserId(rs.getInt("UserID"));
					u.setPhoto(rs.getString("Photo"));
					u.setUserName(rs.getString("UserName"));

					spc.setUser(u);

					spc.setSpcId(rs.getInt("SPCID"));
					spc.setComment(rs.getString("Comment"));

					spc.setUpdateTime(fullDateFormat.format(rs
							.getTimestamp("UpdateTime")));

					spcList.add(spc);
				}
				request.setAttribute("commentList", spcList);
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		request.setAttribute("pic", sp);
		request.setAttribute("owner", owner);

		return mapping.findForward("success");
	}
	
	/**
	 * 加载下一张图片，写入到JSON中。
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward next(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		ShowPicForm showPicForm = (ShowPicForm) form;
		Timestamp timeTmp;
		SimpleDateFormat fullDateFormat = new SimpleDateFormat(
				"yyyy-MM-dd HH:mm:ss", new Locale("zh", "cn"));

		// 照片的ID、标题、上传时间、链接、封面标志
		// 照片的评论，包括评论人ID、头像、评论内容、评论时间
		String sql = "";
		sql += "select top 1 SharePhoto.SPID,SharePhoto.Title,"
				+ "SharePhoto.UpdateTime,SharePhoto.PhotoURL,SharePhoto.IndexPic ";
		sql += "from SharePhoto where SharePhoto.SPID";
		sql += (showPicForm.getNextPre() == 1) ? ">" : "<";
		sql += showPicForm.getId();
		sql += " order by SharePhoto.UpdateTime asc";
		DBManager db = new DBManager();
		ResultSet rs = db.doQuery(sql);

		//输出格式：
		//[[照片信息],[[评论ID,评论人ID,头像,内容,时间],[评论ID,评论人ID,头像,内容,时间]...]]
		int curSpId = 0;
		try {
			PrintWriter out = response.getWriter();
			out.print("[");
			if (rs.next()) {
				out.print("[");
				out.print("\"");
				out.print(rs.getInt("SPID"));
				curSpId = rs.getInt("SPID");
				out.print("\"");
				out.print(",");
				out.print("\"");
				out.print(URLEncoder.encode(rs.getString("Title"),"UTF-8"));
				out.print("\"");
				out.print(",");

				timeTmp = rs.getTimestamp("UpdateTime");
				out.print("\"");
				out.print(fullDateFormat.format(timeTmp));
				out.print("\"");
				out.print(",");
				out.print("\"");
				out.print(rs.getString("PhotoURL"));
				out.print("\"");
				out.print(",");
				out.print("\"");
				out.print(rs.getInt("IndexPic"));
				out.print("\"");
				out.print("]");
			}

			if (curSpId > 0) {
				sql = "select SharePhotoComment.SPCID,"
						+ "SharePhotoComment.Comment,SharePhotoComment.UpdateTime,"
						+ "Users.UserID,Users.Photo,Users.UserName ";
				sql += "from SharePhotoComment left join Users "
						+ "on(SharePhotoComment.UserID=Users.UserID) ";
				sql += "where SharePhotoComment.SharePhotoID=";
				sql += curSpId;
				sql += " order by SharePhotoComment.UpdateTime asc";

				rs = db.doQuery(sql);
				out.print(",[");
				while (rs.next()) {
					out.print("[");
					
					out.print("\"");
					out.print(rs.getInt("SPCID"));
					out.print("\"");
					out.print(",");
					
					out.print("\"");
					out.print(rs.getInt("UserID"));
					out.print("\"");
					out.print(",");
					
					out.print("\"");
					out.print(rs.getString("Photo"));
					out.print("\"");
					out.print(",");
					
					out.print("\"");
					out.print(URLEncoder.encode(rs.getString("UserName"),"UTF-8"));
					out.print("\"");
					out.print(",");
					
					out.print("\"");
					out.print(URLEncoder.encode(rs.getString("Comment"),"UTF-8"));
					out.print("\"");
					out.print(",");
					
					out.print("\"");
					out.print(fullDateFormat.format(rs.getTimestamp("UpdateTime")));
					out.print("\"");
					
					out.print("]");
				}
				out.print("]");
			}
			out.print("]");
		} catch (SQLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

		return null;
	}

}