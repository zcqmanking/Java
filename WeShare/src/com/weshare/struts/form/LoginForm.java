/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.weshare.struts.form;

import java.io.UnsupportedEncodingException;
import java.net.URLDecoder;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.ActionErrors;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.action.ActionMessage;

/**
 * MyEclipse Struts Creation date: 06-04-2011
 * 
 * XDoclet definition:
 * 
 * @struts.form name="loginForm"
 */
@SuppressWarnings("serial")
public class LoginForm extends ActionForm {
	/*
	 * Generated fields
	 */

	/** saveCookie property */
	private String saveCookie;

	/** username property */
	private String username;

	/** password property */
	private String password;

	/*
	 * Generated Methods
	 */

	/**
	 * Method validate
	 * 
	 * @param mapping
	 * @param request
	 * @return ActionErrors
	 */
	public ActionErrors validate(ActionMapping mapping,
			HttpServletRequest request) {
		ActionErrors err = new ActionErrors();
		if ((this.username == null) || (this.username.equals(""))
				|| (this.password == null) || (this.password.equals(""))) {
			String un = null;
			String pw = null;
			HttpSession session = request.getSession();
			un = (String) session.getAttribute("curUserName");
			pw = (String) session.getAttribute("curPassWord");
			setUsername(un);
			setPassword(pw);
			if (un == null || un.equals("") || pw == null
					|| pw.equals("")) {
				Cookie cookies[] = null;
				cookies = request.getCookies();
				if (cookies != null) {
					String strKey;
					for (int i = 0; i < cookies.length; i++) {
						strKey = cookies[i].getName();
						if (strKey.equalsIgnoreCase("curUserName")) {
							try {
								un = URLDecoder.decode(cookies[i].getValue(), "UTF-8");
								session.setAttribute("curUserName", un);
								setUsername(un);
							} catch (UnsupportedEncodingException e) {
								e.printStackTrace();
							}
						} else if (strKey.equalsIgnoreCase("curPassWord")) {
							pw = cookies[i].getValue();
							session.setAttribute("curPassWord", pw);
							setPassword(pw);
						}
					}
				}
			}
		}
		if ((this.username == null) || (this.username.equals(""))){
			err.add("usernameErr", new ActionMessage("err.login.username"));
		}
		if ((this.password == null) || (this.password.equals(""))) {
			err.add("passwordErr", new ActionMessage("err.login.password"));
		}
		return err;
	}

	/**
	 * Method reset
	 * 
	 * @param mapping
	 * @param request
	 */
	public void reset(ActionMapping mapping, HttpServletRequest request) {
		// TODO Auto-generated method stub
	}

	/**
	 * Returns the saveCookie.
	 * 
	 * @return String
	 */
	public String getSaveCookie() {
		return saveCookie;
	}

	/**
	 * Set the saveCookie.
	 * 
	 * @param saveCookie
	 *            The saveCookie to set
	 */
	public void setSaveCookie(String saveCookie) {
		this.saveCookie = saveCookie;
	}

	/**
	 * Returns the username.
	 * 
	 * @return String
	 */
	public String getUsername() {
		return username;
	}

	/**
	 * Set the username.
	 * 
	 * @param username
	 *            The username to set
	 */
	public void setUsername(String username) {
		this.username = username;
	}

	/**
	 * Returns the password.
	 * 
	 * @return String
	 */
	public String getPassword() {
		return password;
	}

	/**
	 * Set the password.
	 * 
	 * @param password
	 *            The password to set
	 */
	public void setPassword(String password) {
		this.password = password;
	}
}